//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MidForm.MyServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyServiceReference.IMidService")]
    public interface IMidService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/showUsers", ReplyAction="http://tempuri.org/IMidService/showUsersResponse")]
        MidtermWcfService.DataContracts.UserDTO[] showUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/showUsers", ReplyAction="http://tempuri.org/IMidService/showUsersResponse")]
        System.Threading.Tasks.Task<MidtermWcfService.DataContracts.UserDTO[]> showUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/updateUser", ReplyAction="http://tempuri.org/IMidService/updateUserResponse")]
        void updateUser(int id, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/updateUser", ReplyAction="http://tempuri.org/IMidService/updateUserResponse")]
        System.Threading.Tasks.Task updateUserAsync(int id, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/insertUser", ReplyAction="http://tempuri.org/IMidService/insertUserResponse")]
        void insertUser(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/insertUser", ReplyAction="http://tempuri.org/IMidService/insertUserResponse")]
        System.Threading.Tasks.Task insertUserAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/deleteUser", ReplyAction="http://tempuri.org/IMidService/deleteUserResponse")]
        void deleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/deleteUser", ReplyAction="http://tempuri.org/IMidService/deleteUserResponse")]
        System.Threading.Tasks.Task deleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/showOrders", ReplyAction="http://tempuri.org/IMidService/showOrdersResponse")]
        MidtermWcfService.DataContracts.OrderDTO[] showOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/showOrders", ReplyAction="http://tempuri.org/IMidService/showOrdersResponse")]
        System.Threading.Tasks.Task<MidtermWcfService.DataContracts.OrderDTO[]> showOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/updateOrder", ReplyAction="http://tempuri.org/IMidService/updateOrderResponse")]
        void updateOrder(int id, string name, string price, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/updateOrder", ReplyAction="http://tempuri.org/IMidService/updateOrderResponse")]
        System.Threading.Tasks.Task updateOrderAsync(int id, string name, string price, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/deleteOrder", ReplyAction="http://tempuri.org/IMidService/deleteOrderResponse")]
        void deleteOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/deleteOrder", ReplyAction="http://tempuri.org/IMidService/deleteOrderResponse")]
        System.Threading.Tasks.Task deleteOrderAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/insertOrder", ReplyAction="http://tempuri.org/IMidService/insertOrderResponse")]
        void insertOrder(string name, string price, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/insertOrder", ReplyAction="http://tempuri.org/IMidService/insertOrderResponse")]
        System.Threading.Tasks.Task insertOrderAsync(string name, string price, int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/updateUsersOrdersQty", ReplyAction="http://tempuri.org/IMidService/updateUsersOrdersQtyResponse")]
        void updateUsersOrdersQty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/updateUsersOrdersQty", ReplyAction="http://tempuri.org/IMidService/updateUsersOrdersQtyResponse")]
        System.Threading.Tasks.Task updateUsersOrdersQtyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/getUser", ReplyAction="http://tempuri.org/IMidService/getUserResponse")]
        MidtermWcfService.DataContracts.UserDTO getUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/getUser", ReplyAction="http://tempuri.org/IMidService/getUserResponse")]
        System.Threading.Tasks.Task<MidtermWcfService.DataContracts.UserDTO> getUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/getOrder", ReplyAction="http://tempuri.org/IMidService/getOrderResponse")]
        MidtermWcfService.DataContracts.OrderDTO getOrder(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMidService/getOrder", ReplyAction="http://tempuri.org/IMidService/getOrderResponse")]
        System.Threading.Tasks.Task<MidtermWcfService.DataContracts.OrderDTO> getOrderAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMidServiceChannel : MidForm.MyServiceReference.IMidService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MidServiceClient : System.ServiceModel.ClientBase<MidForm.MyServiceReference.IMidService>, MidForm.MyServiceReference.IMidService {
        
        public MidServiceClient() {
        }
        
        public MidServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MidServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MidServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MidServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MidtermWcfService.DataContracts.UserDTO[] showUsers() {
            return base.Channel.showUsers();
        }
        
        public System.Threading.Tasks.Task<MidtermWcfService.DataContracts.UserDTO[]> showUsersAsync() {
            return base.Channel.showUsersAsync();
        }
        
        public void updateUser(int id, string email, string password) {
            base.Channel.updateUser(id, email, password);
        }
        
        public System.Threading.Tasks.Task updateUserAsync(int id, string email, string password) {
            return base.Channel.updateUserAsync(id, email, password);
        }
        
        public void insertUser(string email, string password) {
            base.Channel.insertUser(email, password);
        }
        
        public System.Threading.Tasks.Task insertUserAsync(string email, string password) {
            return base.Channel.insertUserAsync(email, password);
        }
        
        public void deleteUser(int id) {
            base.Channel.deleteUser(id);
        }
        
        public System.Threading.Tasks.Task deleteUserAsync(int id) {
            return base.Channel.deleteUserAsync(id);
        }
        
        public MidtermWcfService.DataContracts.OrderDTO[] showOrders() {
            return base.Channel.showOrders();
        }
        
        public System.Threading.Tasks.Task<MidtermWcfService.DataContracts.OrderDTO[]> showOrdersAsync() {
            return base.Channel.showOrdersAsync();
        }
        
        public void updateOrder(int id, string name, string price, int user_id) {
            base.Channel.updateOrder(id, name, price, user_id);
        }
        
        public System.Threading.Tasks.Task updateOrderAsync(int id, string name, string price, int user_id) {
            return base.Channel.updateOrderAsync(id, name, price, user_id);
        }
        
        public void deleteOrder(int id) {
            base.Channel.deleteOrder(id);
        }
        
        public System.Threading.Tasks.Task deleteOrderAsync(int id) {
            return base.Channel.deleteOrderAsync(id);
        }
        
        public void insertOrder(string name, string price, int user_id) {
            base.Channel.insertOrder(name, price, user_id);
        }
        
        public System.Threading.Tasks.Task insertOrderAsync(string name, string price, int user_id) {
            return base.Channel.insertOrderAsync(name, price, user_id);
        }
        
        public void updateUsersOrdersQty(int id) {
            base.Channel.updateUsersOrdersQty(id);
        }
        
        public System.Threading.Tasks.Task updateUsersOrdersQtyAsync(int id) {
            return base.Channel.updateUsersOrdersQtyAsync(id);
        }
        
        public MidtermWcfService.DataContracts.UserDTO getUser(int id) {
            return base.Channel.getUser(id);
        }
        
        public System.Threading.Tasks.Task<MidtermWcfService.DataContracts.UserDTO> getUserAsync(int id) {
            return base.Channel.getUserAsync(id);
        }
        
        public MidtermWcfService.DataContracts.OrderDTO getOrder(int id) {
            return base.Channel.getOrder(id);
        }
        
        public System.Threading.Tasks.Task<MidtermWcfService.DataContracts.OrderDTO> getOrderAsync(int id) {
            return base.Channel.getOrderAsync(id);
        }
    }
}
